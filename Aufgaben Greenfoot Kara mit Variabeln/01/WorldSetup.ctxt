#BlueJ class context
comment0.target=WorldSetup
comment0.text=\r\n\ A\ WorldSetup\ contains\ information\ about\ the\ positions\ of\ the\ actors\ in\ the\r\n\ world.\ A\ WorldSetup\ is\ immutable,\ i.e.\ after\ initialization\ it\ cannot\ be\r\n\ changed.\ An\ immutable\ WorldSetup\ is\ easier\ to\ work\ with\ because\ we\ can\ be\r\n\ sure\ that\ there\ will\ not\ be\ any\ side-effects\ if\ we\ make\ changes\ to\ any\r\n\ actors.\ And\ we\ can\ always\ restore\ the\ initial\ WorldSetup.\r\n\ <p>\r\n\ Static\ helper\ methods\ are\ provided\ to\ create\ WorldSetups\ from\ a\ file\ and\ to\r\n\ save\ them\ to\ a\ file.\ A\ text\ file\ can\ contain\ information\ for\ one\ or\ more\r\n\ WorldSetup.\ A\ WorldSetup\ text\ file\ must\ have\ the\ following\ structure\:\r\n\ <p>\r\n\ [titleKey]\:\ World\ Setup\ Title<br>\r\n\ [optionalAttribute1]\:\ attribute<br>\r\n\ [optionalAttribute2]\:\ attribute<br>\r\n\ [optionalAttributeN]\:\ attribute<br>\r\n\ <p>\r\n\ After\ the\ titleKey\ and\ the\ optional\ attributes,\ the\ actor\ positions\ are\r\n\ described\ with\ the\ following\ signs\:\r\n\ <ul>\r\n\ <li>Kara\:\ @\r\n\ <li>Tree\:\ \#\r\n\ <li>Leaf\:\ .\r\n\ <li>Mushroom\:\ $\r\n\ <li>Mushroom\ on\ Leaf\:\ *\r\n\ <li>Kara\ on\ Leaf\:\ +\r\n\ <li>Empty\ Field\:\ Space\r\n\ </ul>\r\n\ <p>\r\n\ A\ line\ starting\ with\ a\ Semicolon\ (;)\ is\ a\ comment\ and\ is\ ignored\ by\ the\r\n\ parser.\r\n\ \r\n\ @author\ Marco\ Jakob\ (http\://code.makery.ch)\r\n
comment1.params=builder
comment1.target=WorldSetup(WorldSetup.Builder)
comment1.text=\r\n\ Constructor\ to\ be\ used\ by\ the\ Builder.\r\n
comment10.params=x\ y
comment10.target=char\ getActorTypeAt(int,\ int)
comment10.text=\r\n\ Returns\ the\ actor\ type\ as\ character\ (see\ class\ description).\r\n\ \r\n\ @param\ x\r\n\ \ \ \ \ \ \ \ \ \ \ \ the\ x-position\r\n\ @param\ y\r\n\ \ \ \ \ \ \ \ \ \ \ \ the\ y-position\r\n\ @return\ the\ actor\ char\ or\ {@link\ \#UNDEFINED}\ if\ the\ position\ is\ not\r\n\ \ \ \ \ \ \ \ \ defined.\r\n
comment11.params=cellSize
comment11.target=greenfoot.GreenfootImage\ toImage(int)
comment11.text=\r\n\ Returns\ an\ image\ representation\ of\ this\ WorldSetup\ with\ all\ the\ actors.\r\n\ \r\n\ @param\ cellSize\r\n\ \ \ \ \ \ \ \ \ \ \ \ The\ size\ of\ each\ cell\ of\ the\ grid.\r\n\ @return\r\n
comment12.params=printWidthAndHeight
comment12.target=java.lang.String\ toASCIIText(boolean)
comment12.text=\r\n\ Returns\ a\ ASCII\ String\ representation\ of\ this\ WorldSetup.\r\n\ \r\n\ @param\ printWidthAndHeight\r\n\ \ \ \ \ \ \ \ \ \ \ \ if\ true,\ the\ width\ and\ height\ attributes\ are\ also\ added.\r\n\ @return\r\n
comment13.params=
comment13.target=java.lang.String\ toString()
comment14.params=fileName\ titleKey\ attributeKeys
comment14.target=WorldSetup[]\ parseFromFile(java.lang.String,\ java.lang.String,\ java.lang.String[])
comment14.text=\r\n\ Parses\ (one\ or\ many)\ world\ setups\ from\ the\ specified\ file.\ The\ default\r\n\ width\ and\ height\ attribute\ keys\ are\ used\ to\ get\ width\ and\ height\ from\ the\r\n\ file.\ If\ those\ attributes\ are\ not\ defined\ in\ the\ text\ file,\ width\ and\r\n\ height\ are\ determined\ from\ the\ actor\ positions.\r\n\ <p>\r\n\ Hint\:\ If\ there\ are\ problems\ accessing\ a\ directory\ (e.g.\ on\ the\ web)\ then\r\n\ only\ filenames\ without\ wildcards\ should\ be\ used\!\r\n\ \r\n\ @param\ fileName\r\n\ \ \ \ \ \ \ \ \ \ \ \ The\ filename\ of\ the\ world\ setup\ file,\ relative\ to\ the\ package\r\n\ \ \ \ \ \ \ \ \ \ \ \ root\ or\ relative\ to\ the\ project\ root.\ Wildcards\ (?\ or\ *)\ may\r\n\ \ \ \ \ \ \ \ \ \ \ \ be\ used.\r\n\ @param\ titleKey\r\n\ \ \ \ \ \ \ \ \ \ \ \ The\ key\ to\ recognize\ the\ start\ of\ the\ world\ setup\ inside\ the\r\n\ \ \ \ \ \ \ \ \ \ \ \ file,\ e.g.\ "World\:".\ The\ characters\ following\ the\ key\ will\ be\r\n\ \ \ \ \ \ \ \ \ \ \ \ used\ as\ title.\r\n\ @param\ attributeKeys\r\n\ \ \ \ \ \ \ \ \ \ \ \ Keys\ for\ optional\ attributes,\ e.g.\ "Password\:".\r\n\ @return\ the\ world\ setups\ as\ an\ array\r\n\ @throws\ IOException\ \r\n\ \t\t\t\ \ Thrown\ if\ no\ file\ could\ be\ found\ or\ a\ file\ could\ not\ be\ read.\r\n
comment15.params=fileName\ clazz\ titleKey\ attributeKeys
comment15.target=WorldSetup[]\ parseFromFile(java.lang.String,\ java.lang.Class,\ java.lang.String,\ java.lang.String[])
comment15.text=\r\n\ Parses\ (one\ or\ many)\ world\ setups\ from\ the\ specified\ file.\ The\ default\r\n\ width\ and\ height\ attribute\ keys\ are\ used\ to\ get\ width\ and\ height\ from\ the\r\n\ file.\ If\ those\ attributes\ are\ not\ defined\ in\ the\ text\ file,\ width\ and\r\n\ height\ are\ determined\ from\ the\ actor\ positions.\r\n\ <p>\r\n\ Hint\:\ If\ there\ are\ problems\ accessing\ a\ directory\ (e.g.\ on\ the\ web)\ then\r\n\ only\ filenames\ without\ wildcards\ should\ be\ used\!\r\n\ \r\n\ @param\ fileName\r\n\ \ \ \ \ \ \ \ \ \ \ \ The\ filename\ of\ the\ world\ setup\ file,\ relative\ to\ the\ class,\r\n\ \ \ \ \ \ \ \ \ \ \ \ relative\ to\ the\ package\ root\ or\ relative\ to\ the\ project\ root.\r\n\ \ \ \ \ \ \ \ \ \ \ \ Wildcards\ (?\ or\ *)\ may\ be\ used.\r\n\ @param\ clazz\r\n\ \ \ \ \ \ \ \ \ \ \ \ The\ class\ used\ to\ get\ the\ relative\ path\ to\ the\ file\ or\r\n\ \ \ \ \ \ \ \ \ \ \ \ <code>null</code>\ if\ the\ file\ should\ be\ retrieved\ relative\ to\r\n\ \ \ \ \ \ \ \ \ \ \ \ the\ jar\ root\ or\ project\ root.\r\n\ @param\ titleKey\r\n\ \ \ \ \ \ \ \ \ \ \ \ The\ key\ to\ recognize\ the\ start\ of\ the\ world\ setup\ inside\ the\r\n\ \ \ \ \ \ \ \ \ \ \ \ file,\ e.g.\ "World\:".\ The\ characters\ following\ the\ key\ will\ be\r\n\ \ \ \ \ \ \ \ \ \ \ \ used\ as\ title.\r\n\ @param\ attributeKeys\r\n\ \ \ \ \ \ \ \ \ \ \ \ Keys\ for\ optional\ attributes,\ e.g.\ "Password\:".\r\n\ @return\ the\ world\ setups\ as\ an\ array\r\n\ @throws\ IOException\ \r\n\ \t\t\t\ \ Thrown\ if\ no\ file\ could\ be\ found\ or\ a\ file\ could\ not\ be\ read.\r\n
comment16.params=fileName\ clazz\ titleKey\ worldWidth\ worldHeight\ attributeKeys
comment16.target=WorldSetup[]\ parseFromFile(java.lang.String,\ java.lang.Class,\ java.lang.String,\ int,\ int,\ java.lang.String[])
comment16.text=\r\n\ Parses\ (one\ or\ many)\ world\ setups\ from\ the\ specified\ file.\r\n\ <p>\r\n\ Hint\:\ If\ there\ are\ problems\ accessing\ a\ directory\ (e.g.\ on\ the\ web)\ then\r\n\ only\ filenames\ without\ wildcards\ should\ be\ used\!\r\n\ \r\n\ @param\ fileName\r\n\ \ \ \ \ \ \ \ \ \ \ \ The\ filename\ of\ the\ world\ setup\ file,\ relative\ to\ the\ class,\r\n\ \ \ \ \ \ \ \ \ \ \ \ relative\ to\ the\ package\ root\ or\ relative\ to\ the\ project\ root.\r\n\ \ \ \ \ \ \ \ \ \ \ \ Wildcards\ (?\ or\ *)\ may\ be\ used.\r\n\ @param\ clazz\r\n\ \ \ \ \ \ \ \ \ \ \ \ The\ class\ used\ to\ get\ the\ relative\ path\ to\ the\ file\ or\r\n\ \ \ \ \ \ \ \ \ \ \ \ <code>null</code>\ if\ the\ file\ should\ be\ retrieved\ relative\ to\r\n\ \ \ \ \ \ \ \ \ \ \ \ the\ jar\ root\ or\ project\ root.\r\n\ @param\ titleKey\r\n\ \ \ \ \ \ \ \ \ \ \ \ The\ key\ to\ recognize\ the\ start\ of\ the\ world\ setup\ inside\ the\r\n\ \ \ \ \ \ \ \ \ \ \ \ file,\ e.g.\ "World\:".\ The\ characters\ following\ the\ key\ will\ be\r\n\ \ \ \ \ \ \ \ \ \ \ \ used\ as\ title.\r\n\ @param\ worldWidth\r\n\ \ \ \ \ \ \ \ \ \ \ \ the\ width\ or\ -1\ if\ it\ should\ be\ specified\ through\ width\r\n\ \ \ \ \ \ \ \ \ \ \ \ attribute\ or\ from\ length\ of\ actor\ lines\ in\ the\ file.\r\n\ @param\ worldHeight\r\n\ \ \ \ \ \ \ \ \ \ \ \ the\ height\ or\ -1\ if\ it\ should\ be\ specified\ through\ height\r\n\ \ \ \ \ \ \ \ \ \ \ \ attribute\ or\ from\ height\ of\ actor\ lines\ in\ the\ file.\r\n\ @param\ attributeKeys\r\n\ \ \ \ \ \ \ \ \ \ \ \ Keys\ for\ optional\ attributes,\ e.g.\ "Password\:".\r\n\ @return\ the\ world\ setups\ as\ an\ array\r\n\ @throws\ IOException\ \r\n\ \t\t\t\ \ Thrown\ if\ no\ file\ could\ be\ found\ or\ a\ file\ could\ not\ be\ read.\r\n\ \t\t\t\ \ \r\n
comment17.params=lines\ titleKey\ worldWidth\ worldHeight\ fileName\ attributeKeys
comment17.target=java.util.List\ parseFromStrings(java.util.List,\ java.lang.String,\ int,\ int,\ java.lang.String,\ java.lang.String[])
comment17.text=\r\n\ Parses\ (one\ or\ many)\ world\ setups\ from\ the\ specified\ Strings.\r\n\ \r\n\ @param\ lines\r\n\ \ \ \ \ \ \ \ \ \ \ \ A\ list\ of\ Strings\ containing\ the\ contents\ of\ a\ world\ setup\r\n\ \ \ \ \ \ \ \ \ \ \ \ file.\r\n\ @param\ titleKey\r\n\ \ \ \ \ \ \ \ \ \ \ \ The\ key\ to\ recognize\ the\ start\ of\ the\ world\ setup\ inside\ the\r\n\ \ \ \ \ \ \ \ \ \ \ \ file,\ e.g.\ "World\:".\ The\ characters\ following\ the\ key\ will\ be\r\n\ \ \ \ \ \ \ \ \ \ \ \ used\ as\ title.\r\n\ @param\ worldWidth\r\n\ \ \ \ \ \ \ \ \ \ \ \ the\ width\ or\ -1\ if\ it\ should\ be\ specified\ through\ width\r\n\ \ \ \ \ \ \ \ \ \ \ \ attribute\ or\ from\ length\ of\ actor\ lines\ in\ the\ file.\r\n\ @param\ worldHeight\r\n\ \ \ \ \ \ \ \ \ \ \ \ the\ height\ or\ -1\ if\ it\ should\ be\ specified\ through\ height\r\n\ \ \ \ \ \ \ \ \ \ \ \ attribute\ or\ from\ height\ of\ actor\ lines\ in\ the\ file.\r\n\ @param\ fileName\r\n\ \ \ \ \ \ \ \ \ \ \ \ The\ filename\ where\ the\ Strings\ were\ retrieved\ from\ or\r\n\ \ \ \ \ \ \ \ \ \ \ \ <code>null</code>.\r\n\ @param\ attributeKeys\r\n\ \ \ \ \ \ \ \ \ \ \ \ Keys\ for\ optional\ attributes,\ e.g.\ "Password\:".\r\n\ @return\ the\ world\ setups\ as\ an\ array\r\n
comment18.params=fileName\ clazz
comment18.target=java.util.List\ findMatchingFiles(java.lang.String,\ java.lang.Class)
comment18.text=\r\n\ Tries\ to\ load\ the\ specified\ file\ (or\ files)\ either\ relative\ to\ the\ class,\r\n\ relative\ to\ the\ package\ root\ or\ relative\ to\ the\ project\ root.\r\n\ \r\n\ @param\ fileName\r\n\ \ \ \ \ \ \ \ \ \ \ \ The\ filename\ of\ the\ world\ setup\ file,\ possibly\ relative\ to\ the\r\n\ \ \ \ \ \ \ \ \ \ \ \ clazz.\ Wildcards\ (?\ or\ *)\ may\ be\ used.\r\n\ @param\ clazz\r\n\ \ \ \ \ \ \ \ \ \ \ \ The\ class\ used\ to\ get\ the\ relative\ path\ to\ the\ file\ or\r\n\ \ \ \ \ \ \ \ \ \ \ \ <code>null</code>\ if\ the\ file\ should\ be\ retrieved\ relative\ to\r\n\ \ \ \ \ \ \ \ \ \ \ \ the\ jar\ root\ or\ project\ root.\r\n\ @return\ the\ files\ or\ an\ empty\ list\ if\ none\ could\ be\ found.\r\n
comment19.params=actors\ worldWidth\ worldHeight\ titleKey
comment19.target=WorldSetup\ createFromActors(java.util.List,\ int,\ int,\ java.lang.String)
comment19.text=\r\n\ Creates\ a\ WorldSetup\ from\ all\ the\ actors\ in\ the\ list.\ An\ empty\ world\r\n\ setup\ title\ is\ used.\r\n\ \r\n\ @param\ actors\r\n\ @param\ worldWidth\r\n\ @param\ worldHeight\r\n\ @param\ titleKey\r\n\ \ \ \ \ \ \ \ \ \ \ \ The\ key\ to\ recognize\ the\ start\ of\ the\ world\ setup\ inside\ the\r\n\ \ \ \ \ \ \ \ \ \ \ \ file,\ e.g.\ "World\:".\r\n\ @return\r\n
comment2.params=worldSetup
comment2.target=WorldSetup(WorldSetup)
comment2.text=\r\n\ This\ is\ a\ "copy\ constructor".\r\n\ \r\n\ @param\ worldSetup\r\n\ \ \ \ \ \ \ \ \ \ \ \ the\ WorldSetup\ to\ copy\ into\ the\ new\ WorldSetup.\r\n
comment20.params=actors\ worldWidth\ worldHeight\ titleKey\ title\ attributes
comment20.target=WorldSetup\ createFromActors(java.util.List,\ int,\ int,\ java.lang.String,\ java.lang.String,\ java.util.Map)
comment20.text=\r\n\ Creates\ a\ WorldSetup\ from\ all\ the\ actors\ in\ the\ list.\r\n\ \r\n\ @param\ actors\r\n\ @param\ worldWidth\r\n\ @param\ worldHeight\r\n\ @param\ titleKey\r\n\ \ \ \ \ \ \ \ \ \ \ \ The\ key\ to\ recognize\ the\ start\ of\ the\ world\ setup\ inside\ the\r\n\ \ \ \ \ \ \ \ \ \ \ \ file,\ e.g.\ "World\:".\r\n\ @param\ title\r\n\ \ \ \ \ \ \ \ \ \ \ \ The\ title\ of\ the\ world\ setup\r\n\ @param\ attributes\r\n\ \ \ \ \ \ \ \ \ \ \ \ Attributes\ or\ an\ empty\ map\ if\ no\ attributes\ should\ be\ added.\r\n\ @return\r\n
comment3.params=
comment3.target=int\ getWidth()
comment3.text=\r\n\ Returns\ the\ number\ of\ horizontal\ cells.\r\n\ \r\n\ @return\r\n
comment4.params=
comment4.target=int\ getHeight()
comment4.text=\r\n\ Returns\ the\ number\ of\ vertical\ cells.\r\n\ \r\n\ @return\r\n
comment5.params=
comment5.target=java.lang.String\ getTitle()
comment5.text=\r\n\ Returns\ the\ title\ of\ the\ world\ setup.\r\n\ \r\n\ @return\r\n
comment6.params=
comment6.target=java.lang.String\ getTitleKey()
comment6.text=\r\n\ Returns\ the\ title\ key\ that\ is\ used\ to\ identify\ the\ title\ inside\ the\ world\r\n\ setup\ text\ file.\r\n\ \r\n\ @return\r\n
comment7.params=
comment7.target=java.lang.String\ getFileName()
comment7.text=\r\n\ Returns\ the\ filename\ of\ the\ file\ this\ WorldSetup\ was\ loaded\ from.\ May\ be\r\n\ <code>null</code>\ if\ the\ WorldSetup\ was\ not\ loaded\ from\ a\ file.\r\n\ \r\n\ @return\ The\ filename\ or\ <code>null</code>.\r\n
comment8.params=attributeKey
comment8.target=java.lang.String\ getAttribute(java.lang.String)
comment8.text=\r\n\ Returns\ the\ attribute\ for\ the\ specified\ key.\r\n\ \r\n\ @param\ attributeKey\r\n\ @return\r\n
comment9.params=
comment9.target=java.util.Map\ getAttributes()
comment9.text=\r\n\ Returns\ a\ copy\ of\ the\ attributes\ map.\r\n\ \r\n\ @return\r\n
numComments=21
